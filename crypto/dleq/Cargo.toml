[package]
name = "dleq"
version = "0.3.0"
description = "Implementation of single and cross-curve Discrete Log Equality proofs"
license = "MIT"
repository = "https://github.com/serai-dex/serai/tree/develop/crypto/dleq"
authors = ["Luke Parker <lukeparker5132@gmail.com>"]
edition = "2021"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
thiserror = { version = "1", optional = true }
rand_core = "0.6"

zeroize = { version = "^1.5", features = ["zeroize_derive"] }

digest = "0.10"

transcript = { package = "flexible-transcript", path = "../transcript", version = "0.3" }

ff = "0.12"
group = "0.12"

multiexp = { path = "../multiexp", version = "0.3", features = ["batch"], optional = true }

[dev-dependencies]
hex-literal = "0.3"

blake2 = "0.10"

k256 = { version = "0.12", features = ["arithmetic", "bits"] }
dalek-ff-group = { path = "../dalek-ff-group" }

transcript = { package = "flexible-transcript", path = "../transcript", features = ["recommended"] }

[features]
std = []
serialize = ["std"]

# Needed for cross-group DLEqs
black_box = []
secure_capacity_difference = []
experimental = ["std", "thiserror", "multiexp"]

# Only applies to experimental, yet is default to ensure security
# experimental doesn't mandate it itself in case two curves with extreme
# capacity differences are desired to be used together, in which case the user
# must specify experimental without default features
default = ["secure_capacity_difference"]
