name: Tests

on:
  push:
    branches:
      - develop
  pull_request:
  workflow_dispatch:

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get nightly version to use
        id: nightly
        run: echo "version=$(cat .github/nightly-version)" >> $GITHUB_OUTPUT

      - name: Build Dependencies
        uses: ./.github/actions/build-dependencies
        with:
          # Clippy requires nightly due to serai-runtime requiring it
          rust-toolchain: ${{ steps.nightly.outputs.version }}
          rust-components: clippy

  deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Rust Cache
        uses: actions/cache@v3
        with:
          path: ~/.cargo/advisory-db
          key: rust-advisory-db

      - name: Install cargo
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install cargo deny
        run: cargo install --locked cargo-deny

      - name: Run cargo deny
        run: cargo deny -L error --all-features check

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test Dependencies
        uses: ./.github/actions/test-dependencies

      - name: Download the Monero Daemon
        # Calculates OS/ARCH to demonstrate it, yet then locks to linux-x64 due
        # to the contained folder not following the same naming scheme and
        # requiring further expansion not worth doing right now
        shell: bash
        run: |
          RUNNER_OS=${{ runner.os }}
          RUNNER_ARCH=${{ runner.arch }}

          RUNNER_OS=${RUNNER_OS,,}
          RUNNER_ARCH=${RUNNER_ARCH,,}

          RUNNER_OS=linux
          RUNNER_ARCH=x64

          FILE=monero-$RUNNER_OS-$RUNNER_ARCH-${{ inputs.version }}.tar.bz2
          wget https://downloads.getmonero.org/cli/$FILE
          tar -xvf $FILE

          mv monero-x86_64-linux-gnu-${{ inputs.version }}/monerod monerod

      - name: Run Tests
        run: |
          ./monerod --regtest --offline --fixed-difficulty=1 --log-level 2 &
          cd coins/monero
          cargo test --all-features

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get nightly version to use
        id: nightly
        run: echo "version=$(cat .github/nightly-version)" >> $GITHUB_OUTPUT

      # Doesn't grab the cache as it's not needed
      - name: Install rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ steps.nightly.outputs.version }}
          profile: minimal
          components: rustfmt

      - name: Run rustfmt
        run: cargo +${{ steps.nightly.outputs.version }} fmt -- --check
